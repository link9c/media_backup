// Copyright © SixtyFPS GmbH <info@slint-ui.com>
// SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-commercial

import { HorizontalBox, VerticalBox, ListView, StandardListView, GroupBox, CheckBox , Button, GridBox, LineEdit} from "std-widgets.slint";
import { ListViewData, FileAction} from "../global_struct.slint";
import { Page } from "page.slint";

import { PushButton } from "../common.slint";




export component ListViewPage inherits Page {

   

    vertical-stretch: 1;

    VerticalLayout {
    spacing: 5px;
        HorizontalLayout {
            VerticalLayout {
                width: 68% * root.width;
                height: 85px;
                spacing: 5px;
                    HorizontalLayout {
                            spacing: 3px;
                            Button { 
                                text: "源文件夹"; 
                                
                                width: 100px;
                                height: 30px;
                                clicked => { FileAction.get-file-path(0) }
                            }
                        
                        
                        VerticalLayout {
                            Text { 
                                text: FileAction.origin-path; 
                                font-size: 14px;
                                vertical-alignment: center;
    
                            }
                            
                        }
            
                    }
    
                    HorizontalLayout {
                    //height: 20px;
                    Text { 
                                    text: "复制到 ↓"; 
                                    font-size: 14px;
                                    width: 100px;
                                    vertical-alignment: center;
                                    horizontal-alignment: center;
    
                                }
                    
                    
                    }
    
    
    
                    HorizontalLayout {
                            spacing: 3px;
                            Button { 
                                text: "目标文件夹"; 
                                width: 100px;
                                height: 30px;
                                clicked => { FileAction.get-file-path(1) }
                            }
                        
                        
                        VerticalLayout {
                            Text { 
                                text: FileAction.target-path; 
                                font-size: 14px;
                                vertical-alignment: center;
                            
                            }
                            
                        }
                        
                            
                        
                    
                        
                    }
                }
        
                
                progress := VerticalLayout {
                    in property <int> status : ListViewData.data-size[0].status;
                    in property <int> moved : ListViewData.data-size[0].moved /1024;
                    in property <int> total : ListViewData.data-size[0].total /1024;
                    in property <int> progress-percent : 
                    status != 4 ? 100 * (progress.moved / progress.total) > 99 ? 99 : 100 * (progress.moved / progress.total): 100;
                    
                    in-out property <bool> extend-btn : false ;
                    in-out property <bool> stop-continue: false;
                    HorizontalLayout {
                        height: 40%;
                       alignment: end;
                        start-btn := PushButton {
                            width: 1%;
                            text:"开始备份";
                            clicked => {
                                // 显示扩展按钮
                                progress.extend-btn = true;

                                // 执行copy操作
                                FileAction.copy-file(FileAction.origin-path, FileAction.target-path);

                            }
                            enabled: (status == 4 || status == 3 || status == 0) ? true: false;

                        }
                        stop-btn := PushButton {
                            width: progress.extend-btn ? 55px: 0px;
                            text:"暂停";
                            enabled: !progress.stop-continue ;
                            clicked => {
                                progress.stop-continue = !progress.stop-continue;
                                FileAction.update-progress-status(1);
                            }
                        }
                        
                        continue-btn := PushButton {
                            width: progress.extend-btn ? 55px: 0px;
                            text:"继续";
                            enabled: progress.stop-continue ;
                            clicked => {
                                progress.stop-continue = !progress.stop-continue;
                                FileAction.update-progress-status(2);
                            }
                        }
                        exit-btn := PushButton {
                            width: progress.extend-btn ? 55px: 0px;
                            text:"取消";
                            clicked => {
                                progress.extend-btn = false;
                                FileAction.update-progress-status(3);
                            }
                        }
                    }

                    Rectangle {
                        
                        Rectangle {
                            border-color: progress.extend-btn ? red: white;
                            border-width: 1px;
                            width: 200px;
                            height: 25px;
                            Rectangle {
                                
                                background: #3fd9ff;
                                width: progress.extend-btn ? 200px * progress-percent / 100: 0;
                                height: 25px;
                                x: 0px;
                                
                            }
                            Text {
                                text: "\{progress-percent}%(\{progress.moved}mb/\{progress.total}mb)";
                                horizontal-alignment: center;
                                opacity: progress.extend-btn ? 100%: 0%;
                            }
                        }
                        
                    }
                }
                
               
            }
            

    

    // PushButton { text:"sss";clicked => {} }

    
    
    HorizontalLayout{

        height: 30px;
   
        spacing: 2px;
    
        text-edit := LineEdit {
            
                placeholder-text: "查询文件名称";
                // vertical-alignment: center;
                accepted(text) => {

                }
        }
        

        Rectangle {
            height: 30px;
            width: 50px;
            
            Image {
                source: @image-url("../images/1048152.jpg");
                height: 30px;
                width: 30px;
            }

            

            TouchArea {
                clicked => { ListViewData.search-by-name(text-edit.text)}
               
            }
           
        }
        
     
    
    }
    
   
   
    
    HorizontalLayout { 
        in-out property <int> selected-idx: 0;

        VerticalLayout {
            HorizontalBox{
                x:2px;
                Image {
                    
                         width: root.width * 0.03;
                         
                     }
                label-name := Text {
                    in-out property <bool> asent:true ;
                    in-out property <bool> sorted:false ;
                    height: 20px;
                    text: sorted ? asent ? "名称 ↓": "名称 ↑": "名称";
                    font-size: 15px;
                    width: root.width * 0.26;
                    TouchArea {
                        clicked => {
                            label-name.sorted = true;
                            label-name.asent = !label-name.asent;

                            label-size.sorted = false;
                            label-create.sorted = false;
                            label-modified.sorted = false;

                            ListViewData.sort-by(0, asent);
                            }
                            
                        }
                    }


                label-size := Text {
                    in-out property <bool> asent:true ;
                    in-out property <bool> sorted:false ;
                    height: 20px;
                    text: sorted ? asent ? "大小 ↑": "大小 ↓": "大小";
                    font-size: 15px;
                    width: root.width * 0.12;
                    TouchArea {
                        clicked => {
                            label-size.sorted = true;
                            label-size.asent = !label-size.asent;

                            label-name.sorted = false;
                            label-create.sorted = false;
                            label-modified.sorted = false;

                            ListViewData.sort-by(1, asent);
                            }
                        }
                    
                    }

                label-create := Text {
                    in-out property <bool> asent:true ;
                    in-out property <bool> sorted:false ;
                    height: 20px;
                    text: sorted ? asent ? "创建时间 ↑": "创建时间 ↓": "创建时间";
                    font-size: 15px;
                    width: root.width * 0.21;
                    TouchArea {
                        clicked => {
                            label-create.sorted = true;
                            label-create.asent = !label-create.asent;

                            label-name.sorted = false;
                            label-size.sorted = false;
                            label-modified.sorted = false;

                            ListViewData.sort-by(2, asent);
                            }
                        }
                    }

                label-modified := Text {
                    in-out property <bool> asent:true ;
                    in-out property <bool> sorted:false ;
                    height: 20px;
                    text: sorted ? asent ? "修改时间 ↑": "修改时间 ↓": "修改时间";
                    font-size: 15px;
                    width:  root.width * 0.22;
                    TouchArea {
                        clicked => {
                            label-modified.sorted = true;
                            label-modified.asent = !label-modified.asent;

                            label-name.sorted = false;
                            label-size.sorted = false;
                            label-create.sorted = false;

                            ListViewData.sort-by(3, asent);
                            }
                        }
                    }

              
                Text {
                    
                    text: "点击全选";
                    font-size: 15px;
                     width:  root.width * 0.08;
                     TouchArea {
                        clicked => {
                            ListViewData.select-all()
                            }
                        }
                    }

              
                
                }
         
                
        
        
        GridLayout  {
            // preferred-width: 350px;
           

           ListView {
                vertical-stretch: 0;
                
                for item[idx] in ListViewData.select-item : list-item := HorizontalBox {
                    
                    in property <bool> ck: item.checked;
                    // in property <image> img: Functions.get-file-icon(ListViewData.select-item[idx].name);
                    min-height: 30px;
                    max-height: 60px;
                    Image {
                   
                        width: root.width * 0.03;
                        // source: item.file_type == ".png" ? @image-url("../images/list.svg"):  @image-url("../images/copy.svg");
                        source:  !item.is_dir ?
                        (item.file_type != "png" && item.file_type != "jpg") ?  
                        (item.file_type != "doc" && item.file_type != "docx") ? 
                        (item.file_type != "html" && item.file_type != "htm") ? 
                        (item.file_type != "mp3" && item.file_type != "wav" && item.file_type != "flac") ?
                        (item.file_type != "mpeg" && item.file_type != "avi"  && item.file_type != "ogg" && item.file_type != "mp4" && item.file_type != "mkv") ? 
                        (item.file_type != "ppt" && item.file_type != "pptx") ? 
                        item.file_type != "pdf" ? 
                        item.file_type != "torrent" ?
                        (item.file_type != "xls" && item.file_type != "xlsx" && item.file_type != "csv" && item.file_type != "xlsm") ?
                        (item.file_type != "zip" && item.file_type != "rar" && item.file_type != "7z") ? 
                        (item.file_type != "txt") ?
                        (item.file_type != "psd") ?
                        (item.file_type != "svg") ?
                        (item.file_type != "iso") ?
                        (item.file_type != "exe") ?
                        @image-url("../images/file_type/unknow.svg"):
                        @image-url("../images/file_type/exe.svg"):
                        @image-url("../images/file_type/iso.svg"):
                        @image-url("../images/file_type/svg.svg"):
                        @image-url("../images/file_type/ps.svg"): 
                        @image-url("../images/file_type/txt.svg"): 
                        @image-url("../images/file_type/zip_rar.svg"): 
                        @image-url("../images/file_type/xlsx.svg"): 
                        @image-url("../images/file_type/torrent.svg"): 
                        @image-url("../images/file_type/pdf.svg"):
                        @image-url("../images/file_type/ppt.svg"): 
                        @image-url("../images/file_type/mov_mp4.svg"): 
                        @image-url("../images/file_type/mp3_wav.svg"):
                        @image-url("../images/file_type/html.svg"): 
                        @image-url("../images/file_type/word.svg"): 
                        @image-url("../images/file_type/jpg_png.svg"):
                        @image-url("../images/file_type/files.svg")
                        ;
                        
                    }


                    name-text := Rectangle {
                        width: root.width * 0.26;
                        background: item.show ? #fa7f7f: white;
                         Text {
                            font-size: 14px;
                            color: list-item.ck ? #0c9400: black;
                            text: item.name;
                            width: root.width * 0.26;
                            wrap: word-wrap;
                            vertical-alignment: center;
                            
    
                        }
                    }
                    

                    size-text := Text {
                        
                        font-size: 14px;
                        color: list-item.ck ? #0c9400: black;
                        text: item.size_show;
                        width: root.width * 0.12;
                        vertical-alignment: center;

                    }

                    create-time-text := Text {
                        
                        font-size: 14px;
                        color: list-item.ck ? #0c9400: black;
                        text: item.create_time;
                        width: root.width * 0.21;
                        vertical-alignment: center;
                    }

                    modified-time-text := Text {
                       
                        font-size: 14px;
                        color: list-item.ck ? #0c9400: black;
                        text: item.modified_time;
                        width: root.width * 0.22;
                        vertical-alignment: center;
                    }

                    Rectangle {
                        width: root.width * 0.08;
                        Rectangle {
                            border-color: #381eac;
                            border-radius: 3px;
                            border-width: 1px;
                            background: item.checked ? #14c8e7: white;
                            width: 20px;
                            height: 20px;
                            TouchArea {
                                clicked => { 
                                    item.checked = !ck; 
                                    selected-idx = idx;
                                 
                                }
                            }
                        }
                    }
                   
                }
            }
        }}
       
}
}

       
    
    
}